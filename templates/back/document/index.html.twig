{% extends "back/base.html.twig" %}

{% block body %}


        <!--
    <h1>Document index</h1>

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Type</th>
                <th>Statut</th>
                <th>DateEmission</th>
                <th>DateExpiration</th>
                <th>EstArchive</th>
                <th>NbReq</th>
                <th>actions</th>
            </tr>
        </thead>
        <tbody>
        {% for document in documents %}
            <tr>
                <td>{{ document.id }}</td>
                <td>{{ document.type }}</td>
                <td>{{ document.statut }}</td>
                <td>{{ document.dateEmission }}</td>
                <td>{{ document.dateExpiration }}</td>
                <td>{{ document.estArchive ? 'Yes' : 'No' }}</td>
                <td>{{ document.nbReq }}</td>
                <td>
                    <a href="{{ path('app_document_show', {'id': document.id}) }}">show</a>
                    <a href="{{ path('app_document_edit', {'id': document.id}) }}">edit</a>
                </td>
            </tr>
        {% else %}
            <tr>
                <td colspan="8">no records found</td>
            </tr>
        {% endfor %}
        </tbody>
    </table>

    <a href="{{ path('app_document_new') }}">Create new</a>

-->






<div class="content-wrapper">
        <div class="container-xxl flex-grow-1 container-p-y">
            <div class="card">
                <h5 class="card-header">Liste des Documents</h5>
                <div class="table-responsive text-nowrap">
                    <table class="table table-striped">
                        <thead>
                        <tr>
                            <th>Type</th>
                            <th>Statut</th>
                            <th>Date Début validité</th>
                            <th>Date Expiration</th>
                            <th>Archivé</th>
                        </tr>
                        </thead>
                        <tbody class="table-border-bottom-0">
                        {% for document in documents %}
                            <tr>
                                <td><strong>{{ document.type }}</strong></td>
                                <td>
                                    <span class="badge {{ (document.statut | lower) == "publique" ? 'bg-label-primary' : 'bg-label-info' }} me-1">{{ document.statut }}</span>
                                </td>
                                <td>{{ document.dateEmission }}</td>
                                <td>{{ document.dateExpiration }}</td>
                                <td>{{ document.estArchive }}</td>

                                
                                <td>
                                    <div class="dropdown">
                                        <button
                                                type="button"
                                                class="btn p-0 dropdown-toggle hide-arrow"
                                                data-bs-toggle="dropdown"
                                        >
                                            <i class="bx bx-dots-vertical-rounded"></i>
                                        </button>
                                        <div class="dropdown-menu">
                                            <a class="dropdown-item text-warning" href="/dashboard/document/edit/{{ document.id }}"
                                            ><i class="bx bx-edit-alt me-1"></i> Edit</a
                                            >
                                            <a data-document-id="{{ document.id }}" class="dropdown-item text-danger delete-document" href="javascript:void(0);" >
                                                <i class="bx bx-trash me-1"></i> Delete
                                            </a>
                                        </div>
                                    </div>
                                </td>
                            </tr>

                        {% endfor %}

                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>




    <div class="card">
        <div class="card-header header-elements">
            <h5 class="card-title mb-0">Average Skills</h5>
            <div class="card-header-elements ms-auto py-0 dropdown">
                <button type="button" class="btn dropdown-toggle hide-arrow p-0" id="heat-chart-dd" data-bs-toggle="dropdown" aria-expanded="false"><i class="bx bx-dots-vertical-rounded"></i></button>
                <div class="dropdown-menu dropdown-menu-end" aria-labelledby="heat-chart-dd">
                    <a class="dropdown-item" href="javascript:void(0);">Last 28 Days</a>
                    <a class="dropdown-item" href="javascript:void(0);">Last Month</a>
                    <a class="dropdown-item" href="javascript:void(0);">Last Year</a>
                </div>
            </div>
        </div>
        <div class="card-body">
            <canvas id="polarChart" class="chartjs" data-height="337"></canvas>
        </div>
    </div>

    <script>
        // Color Variables
        const purpleColor = '#836AF9',
            yellowColor = '#ffe800',
            cyanColor = '#28dac6',
            orangeColor = '#FF8132',
            oceanBlueColor = '#299AFF',
            greyColor = '#4F5D70';
        let cardColor, headingColor, labelColor, borderColor, legendColor;

        if (isDarkStyle) {
            cardColor = config.colors_dark.cardColor;
            headingColor = config.colors_dark.headingColor;
            labelColor = config.colors_dark.textMuted;
            legendColor = config.colors_dark.bodyColor;
            borderColor = config.colors_dark.borderColor;
        } else {
            cardColor = config.colors.cardColor;
            headingColor = config.colors.headingColor;
            labelColor = config.colors.textMuted;
            legendColor = config.colors.bodyColor;
            borderColor = config.colors.borderColor;
        }
        const polarChart = document.getElementById('polarChart');
        if (polarChart) {
            const polarChartVar = new Chart(polarChart, {
                type: 'polarArea',
                data: {
                    labels: ['Africa', 'Asia', 'Europe', 'America', 'Antarctica', 'Australia'],
                    datasets: [
                        {
                            label: 'Population (millions)',
                            backgroundColor: [purpleColor, yellowColor, orangeColor, oceanBlueColor, greyColor, cyanColor],
                            data: [19, 17.5, 15, 13.5, 11, 9],
                            borderWidth: 0
                        }
                    ]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    animation: {
                        duration: 500
                    },
                    scales: {
                        r: {
                            ticks: {
                                display: false,
                                color: labelColor
                            },
                            grid: {
                                display: false
                            }
                        }
                    },
                    plugins: {
                        tooltip: {
                            // Updated default tooltip UI
                            rtl: isRtl,
                            backgroundColor: cardColor,
                            titleColor: headingColor,
                            bodyColor: legendColor,
                            borderWidth: 1,
                            borderColor: borderColor
                        },
                        legend: {
                            rtl: isRtl,
                            position: 'right',
                            labels: {
                                usePointStyle: true,
                                padding: 25,
                                boxWidth: 8,
                                boxHeight: 8,
                                color: legendColor
                            }
                        }
                    }
                }
            });
        }
    </script>





<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>

    <script>
        $(document).ready(function() {
            $('.delete-document').click(function(e) {
                e.preventDefault();
                const documentId = $(this).data('document-id');
                const deleteLink = $(this); // Store reference to this

                $.ajax({
                    url: '/dashboard/document/' + documentId,
                    type: 'DELETE',
                    success: function(response) {
                        deleteLink.closest('tr').remove(); // Use stored reference
                    },
                    error: function(xhr, status, error) {
                        console.error(error);
                    }
                });
            });
        });
    </script>







{% endblock %}
